name: Build, Analyze with SonarQube, Deploy to Nexus

on:
  push:
    branches: [ "qa" ]

jobs:
  build:
    name: Build and Deploy
    runs-on: ubuntu-latest

    env:
      NEXUS_URL: http://3.137.173.251:8081/
      NEXUS_REPO: maven-releases
      GROUP_ID: com.example
      ARTIFACT_ID: sample-sonarqube
      VERSION: 1.0.0

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: 17

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Build and Test with Maven
      run: mvn clean verify

    - name: SonarQube Analysis
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        mvn sonar:sonar \
          -Dsonar.projectKey=sample-sonarqube \
          -Dsonar.host.url=http://18.224.96.222:9000/ \
          -Dsonar.login=$SONAR_TOKEN

    - name: Deploy Artifact to Nexus
      env:
        NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
        NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
      run: |
        FILE=target/${{ env.ARTIFACT_ID }}-${{ env.VERSION }}.jar
        GROUP_PATH=$(echo "${{ env.GROUP_ID }}" | tr '.' '/')
        curl -u $NEXUS_USERNAME:$NEXUS_PASSWORD \
          --upload-file $FILE \
          ${{ env.NEXUS_URL }}/repository/${{ env.NEXUS_REPO }}/$GROUP_PATH/${{ env.ARTIFACT_ID }}/${{ env.VERSION }}/${{ env.ARTIFACT_ID }}-${{ env.VERSION }}.jar
